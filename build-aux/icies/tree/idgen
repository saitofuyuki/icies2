#!/bin/sh
# Filename:  idgen
# Author: SAITO Fuyuki
# Created:   Wed May 20 2009
# Time-stamp: <2011/11/02 01:29:45 fuyuki idgen>

test x$GIT = x && GIT=git
test x$SED = x && SED=sed

show_usage ()
{
  cat <<EOF
usage $0 [OPTIONS]
  -o FILENAME     specify output file name (- if stdout)
  -d DIRECTORY    specify output directory other than git root
  -r REVISION     default HEAD
EOF
}


rev=HEAD
builddir=.
srcdir=.
odir=
out=TreeID
while test $# -ge 1
do
  case $1 in
  -q) quiet=yes;;
  -d) odir=$2; shift;;
  -o) out=$2; shift;;
  -g) GIT=$2; shift;;
  -n) nc=$2;  shift;;
  -r) rev=$2; shift;;
  -s) srcdir=$2; shift ;;
  -b) builddir=$2; shift ;;
  -h) show_usage; exit 0;;
  -*) ;;
  *)  break
  esac
  shift
done

if test $GIT = :; then
  echo "disabled.  set GIT." >&2
  exit 1
elif $GIT --version > /dev/null 2>&1; then
  :
else
  echo "cannot execute $GIT. set GIT properly." >&2
  exit 2
fi

test x$quiet = x || exec 2>&-

gitcom="$GIT rev-parse $rev"
sha=`$gitcom`

# out_define SHA MACRO [QUOTE]
out_define ()
{
  s=$1
  m=$2
  q=x$3
  if test $q = xd ;then
    s='"'$s'"'
  elif test $q = xs; then
    s="'$s'"
  fi
  echo "#define $2 $s"
}

# out_var SHA VAR LEN PREFIX QUOTE
out_var ()
{
  s=$1
  v=$2
  p=$3
  l=$4
  q=x$5
  if test x$l != x;then
    s=`echo $s | $SED -e "s/^\(.\{$l\}\).*\$/\1/"`
  fi
  echo "$v=$p$s"
}

if test x$odir = x;then
  odir=`$GIT rev-parse --show-cdup`
fi
if test x$out != x-; then
  out=$odir$out
  if test -f $out; then
    tmp=`mktemp`
    exec > $tmp
  else
    exec > $out
  fi
fi

echo '#if 0    /* meta-comment for IAC_GET_SHA '$sha' */'
echo '#endif   /* meta-comment DO NOT MODIFY LINE ABOVE */'

for q in '  ' s d
do
  out_define "$sha" "GIT_INFO$q" $q
done

echo '#if 0 /* meta-comment */'
for l in '' 4 8
do
  for p in "'' ''" 'u _' 'p .' 'm -'
  do
    eval out_var "$sha" GIT_SFX$l$p $l
    # out_var "$sha" "GIT_SFX$l" '' $l
  done
done
echo '#endif /* meta-comment */'

if test x$tmp != x;then
  if cmp --quiet $out $tmp; then
    echo "$out is identical.  skipped." >&2
    rm -f $tmp
  else
    mv $tmp $out
  fi
fi
